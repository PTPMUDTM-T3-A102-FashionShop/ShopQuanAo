@model List<WebsiteBanQuanAo.Models.ChiTietSanPham>
@{
    ViewBag.Title = "Chi Tiết";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}

@section slmua {
    <span id="cartItemCount">@ViewBag.SLSP</span>
}
<style>
    /* Cố định kích thước hình ảnh chính */
    #main_product_image {
        width: 100%;
        max-height: 400px;
        object-fit: contain;
    }

    /* Cố định kích thước hình ảnh thumbnail */
    .thumbnail-images ul {
        padding-left: 0;
        display: flex;
        overflow-x: auto;
        gap: 10px;
    }

    .thumbnail-images .list-inline-item {
        cursor: pointer;
    }

    .thumbnail-images img {
        width: 100px;
        height: 100px;
        object-fit: cover;
        border: 2px solid transparent;
        transition: border 0.3s ease;
    }

        .thumbnail-images img:hover {
            border: 2px solid #007bff;
        }

    /* Thông báo khi sản phẩm hết hàng */
    .out-of-stock-message {
        text-align: center;
        font-size: 1.2em;
        color: red;
        font-weight: bold;
        background-color: #ffe6e6;
        padding: 10px;
        border: 1px solid #ff0000;
        border-radius: 5px;
    }

    /* Thông báo khi sản phẩm đã dừng bán */
    .stopped-selling-message {
        text-align: center;
        font-size: 1.2em;
        color: gray;
        font-weight: bold;
        background-color: #f0f0f0;
        padding: 10px;
        border: 1px solid #cccccc;
        border-radius: 5px;
    }

    /* Làm mờ hình ảnh khi hết hàng hoặc dừng bán */
    .out-of-stock, .stopped-selling {
        filter: grayscale(100%);
        opacity: 0.6;
    }

        /* Hiệu ứng hover nếu hết hàng/dừng bán */
        .out-of-stock:hover, .stopped-selling:hover {
            cursor: not-allowed;
        }

    .price-original {
        color: gray;
    }

        .price-original .original-price {
            text-decoration: line-through;
        }

    .discount-badge {
        background-color: red;
        color: white;
        font-size: 0.8em;
        font-weight: bold;
        padding: 2px 6px;
        border-radius: 4px;
        margin-left: 10px;
        text-decoration: none; /* Đảm bảo tag không bị gạch */
    }

    .price-discounted {
        color: green;
        font-weight: bold;
    }
</style>
@{
    decimal gia = ViewBag.sanpham.Gia;
    int slt = ViewBag.sanpham.SoLuongTonKho;
}
<div class="container mt-5">
    <div style="height:100px"></div>

    <div class="card">
        <div class="row g-0">
            <!-- Hình ảnh sản phẩm -->
            <div class="col-md-6">
                <div class="d-flex flex-column justify-content-center">
                    <div class="main-image">
                        <!-- Hiển thị hình ảnh của sản phẩm đầu tiên trong danh sách -->
                        <img src="~/img/@ViewBag.sanpham.HinhAnhUrl" id="main_product_image" class="img-fluid" alt="Product Image">
                    </div>

                    <div class="thumbnail-images mt-3">
                        <ul id="thumbnail" class="list-inline">
                            @foreach (var item in Model)
                            {
                                // Kiểm tra nếu có hình ảnh và còn hàng
                                if (!string.IsNullOrEmpty(item.HinhAnhUrl) && item.SoLuongTonKho > 0 && item.KichHoat == true)
                                {
                                    string[] dsHinh = item.HinhAnhUrl.Trim().Split(',');
                                    foreach (var image in dsHinh)
                                    {
                                        <li class="list-inline-item">
                                            <img onclick="changeImage(this)"
                                                 src="~/img/@image.Trim()"
                                                 class="img-thumbnail"
                                                 width="100">
                                        </li>
                                    }
                                }
                                // Nếu hết hàng
                                else if (item.SoLuongTonKho == 0 && item.KichHoat == false)
                                {
                                    string[] dsHinh = item.HinhAnhUrl.Trim().Split(',');
                                    foreach (var image in dsHinh)
                                    {
                                        <li class="list-inline-item">
                                            <img src="~/img/@image.Trim()"
                                                 class="img-thumbnail out-of-stock"
                                                 alt="Out of Stock">
                                        </li>
                                    }
                                }
                                // Nếu sản phẩm đã dừng bán
                                else
                                {
                                    string[] dsHinh = item.HinhAnhUrl.Trim().Split(',');
                                    foreach (var image in dsHinh)
                                    {
                                        <li class="list-inline-item">
                                            <img src="~/img/@image.Trim()"
                                                 class="img-thumbnail stopped-selling"
                                                 alt="Stopped Selling">
                                        </li>
                                    }
                                }
                            }

                        </ul>
                    </div>

                </div>
            </div>

            <!-- Thông tin sản phẩm -->
            <div class="col-md-6">
                <div class="p-3 d-flex flex-column justify-content-between">
                    <br />
                    <h3>@ViewBag.sanpham.SanPham.TenSanPham</h3>
                    <div class="mt-2 content">
                        <p>Mô Tả: @ViewBag.sanpham.SanPham.MoTa</p>
                    </div>
                    @if (ViewBag.sanpham.GiaDuocGiam == 0)
                    {
                        <span class="price-discounted" style="margin-right: 10px; font-size: 1em; font-family: 'Arial', sans-serif; color: green; font-weight: bold;" id="giaSanPham">
                            @ViewBag.sanpham.Gia.ToString("N0") VNĐ
                        </span>
                    }
                    else
                    {
                        var GiaThucTe = ViewBag.sanpham.Gia - ViewBag.sanpham.GiaDuocGiam;
                        <h4 class="price-original" style="color: gray; font-size: 1em; text-decoration: none;">
                            <span class="original-price" style="text-decoration: line-through; margin-right: 10px; font-size: 1em; font-family: 'Arial', sans-serif;" id="giaGoc">
                                @ViewBag.sanpham.Gia.ToString("N0") VNĐ
                            </span>
                            <span class="discount-badge" style="background-color: red; color: white; font-size: 1em; font-weight: bold; padding: 2px 6px; border-radius: 4px; font-family: 'Arial', sans-serif;" id="giaduocgiam">
                                -@((ViewBag.sanpham.GiaDuocGiam ?? 0).ToString("N0")) VNĐ
                            </span>
                        </h4>
                        <h4 class="price-discounted" style="color: green; font-size: 1em; font-weight: bold; font-family: 'Arial', sans-serif;" id="giaSanPham">
                            @((GiaThucTe ?? 0).ToString("N0")) VNĐ
                        </h4>
                    }

                    <div class="form-group mt-3">
                        <label>Size:</label>
                        <div class="form-group mt-3">
                            <select id="sizeSelect" class="form-select" onchange="filterColors()">
                                <option value="">Chọn Size:</option>
                                @foreach (var item in Model)
                                {
                                    if (item.SoLuongTonKho > 0 && item.KichHoat == true)  // Chỉ hiển thị size có số lượng tồn kho > 0
                                    {
                                        <option value="@item.SizeID"
                                                data-size-name="@item.Size.TenSize"
                                                @(item.SoLuongTonKho <= 0 ? "disabled" : "")
                                                style="@(item.SoLuongTonKho <= 0 ? "color: gray;" : "")">
                                            @item.Size.TenSize
                                        </option>
                                    }
                                }
                            </select>
                        </div>

                        <div class="form-group mt-3">
                            <label>Màu:</label>
                            <select id="colorSelect" class="form-select" onchange="updatePrice(); updateStock();">
                                <option value="">Chọn Màu</option>
                                @foreach (var item in Model)
                                {
                                    if (item.SoLuongTonKho > 0 && item.KichHoat == true)  // Chỉ hiển thị màu sắc có số lượng tồn kho > 0
                                    {
                                        <option value="@item.MauID"
                                                data-sizeid="@item.SizeID"
                                                @(item.SoLuongTonKho <= 0 ? "disabled" : "")
                                                style="@(item.SoLuongTonKho <= 0 ? "color: gray;" : "")">
                                            @item.Mau.TenMau
                                        </option>
                                    }
                                }
                            </select>
                        </div>
                    </div>

                    <p>Còn: <span id="soLuongTonKho">@slt</span> sản phẩm</p>





                    <!-- Các nút mua hàng -->
                    <div class="buttons d-flex flex-row mt-4 gap-3 justify-content-between">
                        <button type="button" class="btn btn-dark flex-grow-1" onclick="addToCart()">Thêm Giỏ Hàng</button>
                        <button type="button" class="btn btn-dark flex-grow-1" onclick="buyNow()">Mua Ngay</button>
                    </div>

                    <style>
                        .btn {
                            transition: background-color 0.3s ease, transform 0.2s ease;
                        }

                            .btn:hover {
                                background-color: #0056b3; /* Đổi màu nền khi hover */
                                transform: scale(1.05); /* Hiệu ứng phóng to nhẹ */
                            }

                            /* Thêm hiệu ứng khi người dùng nhấn nút */
                            .btn:active {
                                transform: scale(0.98); /* Thu nhỏ nhẹ khi nhấn */
                            }
                    </style>


                </div>
            </div>
        </div>
    </div>


    <div style="padding: 20px;">
        <h2 style="text-align: left;">Bình luận về sản phẩm</h2>

        @if (ViewBag.phanhoi != null && ViewBag.phanhoi.Count > 0)
        {
            <div style="max-height: 400px; overflow-y: auto; border: 1px solid #ddd; border-radius: 8px; padding: 15px; background-color: #f9f9f9;">
                @foreach (var phanHoi in ViewBag.phanhoi)
                {
                    <div style="margin-bottom: 20px; padding: 10px; border-radius: 8px; background-color: #fff; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
                        <p style="font-size: 16px; font-weight: bold; color: #333;">@phanHoi.NguoiDung.TenDangNhap</p>
                        <p style="font-size: 12px; color: #777; margin-bottom: 10px;">
                            <em>@phanHoi.NgayPhanHoi.ToString("dd/MM/yyyy")</em>
                        </p>
                        <p style="font-size: 14px; color: #555;">@phanHoi.NoiDung</p>
                    </div>
                }
            </div>
        }
        else
        {
            <p style="font-size: 16px; color: #888; text-align: left;">Chưa có bình luận nào.</p>
        }
    </div>


    <a href="/product" class="btn btn-outline-primary mt-3">
        <i class="fas fa-arrow-left"></i>
        <span class="ms-2">Quay lại danh sách sản phẩm</span>
    </a>
</div>


<script>


                                    function updatePrice() {
                                    var sizeValue = document.getElementById('sizeSelect').value;
                                    var colorValue = document.getElementById('colorSelect').value;
                                    var productID = @Html.Raw(Json.Encode(Model[0].SanPhamID));

                                    if (!sizeValue || !colorValue) {
                                        return; // Nếu chưa chọn Size hoặc Màu, không cập nhật giá
                                    }

                                    // Gửi yêu cầu Ajax để lấy giá dựa trên SizeID, MauID và ChiTietSanPhamID
                                    $.ajax({
                                        url: '/Product/GetPrice',
                                        type: 'GET',
                                        data: { SizeID: sizeValue, colorID: colorValue, productID: productID },
                                        success: function (response) {
                                            if (response && response.gia !== undefined && response.chiTietSanPhamGia !== undefined) {
                                                var formattedPrice = parseFloat(response.gia)
                                                    .toLocaleString('vi-VN')
                                                    .concat(' VNĐ');
                                                var giaduocgiam = parseFloat(response.giaduocgiam)
                                                    .toLocaleString('vi-VN')
                                                    .concat(' VNĐ');
                                                var originalPrice = parseFloat(response.chiTietSanPhamGia)
                                                    .toLocaleString('vi-VN')
                                                    .concat(' VNĐ');

                                                $('#giaduocgiam').text(giaduocgiam);
                                                $('#giaSanPham').text(formattedPrice);
                                                $('#giaGoc').text(originalPrice);
                                            } else {
                                                alert('Dữ liệu giá trả về không hợp lệ.');
                                            }
                                        },
                                        error: function () {
                                            alert('Có lỗi xảy ra khi lấy giá.');
                                        }
                                    });
                                }

                                function updateStock() {
                                    var sizeValue = document.getElementById('sizeSelect').value;
                                    var colorValue = document.getElementById('colorSelect').value;
                                    var productID = @Html.Raw(Json.Encode(Model[0].SanPhamID));

                                    if (!sizeValue || !colorValue) {
                                        document.getElementById('soLuongTonKho').textContent = '@slt';
                                        return;
                                    }

                                    $.ajax({
                                        url: '/Product/GetStock',
                                        type: 'GET',
                                        data: { SizeID: sizeValue, colorID: colorValue, productID: productID },
                                        success: function (response) {
                                            if (response && response.soLuongTonKho !== undefined) {
                                                document.getElementById('soLuongTonKho').textContent = response.soLuongTonKho;
                                            } else {
                                                alert('Dữ liệu số lượng tồn kho trả về không hợp lệ.');
                                            }
                                        },
                                        error: function () {
                                            alert('Có lỗi xảy ra khi lấy số lượng tồn kho.');
                                        }
                                    });
                                }
                        // Khi trang được tải, xử lý size và màu
                            window.onload = function() {
                                const sizeSelect = document.getElementById('sizeSelect');
                                const colorSelect = document.getElementById('colorSelect');
                                const options = sizeSelect.getElementsByTagName('option');
                                const defaultSizeID = '@ViewBag.sanpham.SizeID';  // Lấy SizeID mặc định từ ViewBag
                                const defaultColorID = '@ViewBag.sanpham.MauID'; // Lấy MauID mặc định từ ViewBag

                                // Mảng lưu trữ các tên size duy nhất
                                const uniqueSizes = [];

                                // Duyệt qua các options để loại bỏ các tên size trùng lặp
                                for (let i = 1; i < options.length; i++) { // Bỏ qua option đầu tiên là "Chọn Size"
                                    const sizeName = options[i].getAttribute('data-size-name');

                                    // Nếu tên size chưa có trong mảng uniqueSizes, thêm vào và để lại option
                                    if (!uniqueSizes.includes(sizeName)) {
                                        uniqueSizes.push(sizeName);
                                    } else {
                                        // Nếu tên size đã có trong mảng, loại bỏ option
                                        options[i].remove();
                                    }
                                }

                                // Sau khi loại bỏ các option trùng lặp, chọn size mặc định từ ViewBag.sanpham.SizeID
                                for (let i = 0; i < options.length; i++) {
                                    const sizeID = options[i].value;
                                    if (sizeID === defaultSizeID) {
                                        options[i].selected = true;  // Chọn size mặc định
                                        break;
                                    }
                                }

                                // Kích hoạt/khóa dropdown màu tùy thuộc vào việc có chọn size hay không
                                sizeSelect.addEventListener('change', function() {
                                    if (sizeSelect.value) {
                                        // Kích hoạt dropdown màu khi đã chọn size
                                        colorSelect.disabled = false;

                                        // Chỉ hiển thị màu phù hợp với size đã chọn
                                        const colorOptions = colorSelect.getElementsByTagName('option');
                                        for (let i = 1; i < colorOptions.length; i++) { // Bỏ qua option đầu tiên là "Chọn Màu"
                                            const sizeID = colorOptions[i].getAttribute('data-sizeid');
                                            if (sizeID !== sizeSelect.value) {
                                                colorOptions[i].style.display = 'none'; // Ẩn màu không tương ứng
                                            } else {
                                                colorOptions[i].style.display = 'block'; // Hiển thị màu phù hợp
                                            }
                                        }

                                    } else {
                                        // Khóa dropdown màu nếu chưa chọn size
                                        colorSelect.disabled = true;
                                        // Reset màu đã chọn
                                        colorSelect.value = '';
                                    }
                                });

                                // Nếu size đã được chọn sẵn từ ViewBag, kích hoạt và hiển thị màu phù hợp
                                if (sizeSelect.value) {
                                    colorSelect.disabled = false;

                                    const colorOptions = colorSelect.getElementsByTagName('option');
                                    for (let i = 1; i < colorOptions.length; i++) {
                                        const sizeID = colorOptions[i].getAttribute('data-sizeid');
                                        if (sizeID !== sizeSelect.value) {
                                            colorOptions[i].style.display = 'none'; // Ẩn màu không tương ứng
                                        } else {
                                            colorOptions[i].style.display = 'block'; // Hiển thị màu phù hợp
                                        }
                                    }
                                }
                        };
                                        var isLoggedIn = @Html.Raw(Json.Encode(Session["UserID"] != null));
                                 function changeImage(element) {
                                            var mainImage = document.getElementById("main_product_image");
                                            mainImage.src = element.src; // Cập nhật hình ảnh chính
                                        }


                                function addToCart() {
                                     var sizeValue = document.getElementById('sizeSelect').value;
                                    var colorValue = document.getElementById('colorSelect').value;

                                    if (!sizeValue || !colorValue) {
                                        alert('Vui lòng chọn Size và Màu trước khi thêm vào giỏ hàng.');
                                        return false; // Dừng lại nếu chưa chọn đủ
                                    }

                                    // Sử dụng Url.Action để tạo đường dẫn đúng với tham số được mã hóa
                                    var baseUrl = '@Url.Action("Add", "Cart", new { id = Model[0].SanPhamID })';
                                    var addToCartUrl = `${baseUrl}?sizeID=${encodeURIComponent(sizeValue)}&colorID=${encodeURIComponent(colorValue)}`;

                                                // Điều hướng đến đường dẫn mới
                                         window.location.href = addToCartUrl;
                                }
                                function buyNow() {
                                    var sizeValue = document.getElementById('sizeSelect').value;
                                    var colorValue = document.getElementById('colorSelect').value;

                                    if (!sizeValue || !colorValue) {
                                        alert('Vui lòng chọn Size và Màu trước khi mua ngay.');
                                        return false; // Dừng lại nếu chưa chọn đủ
                                    }

                                    // Sử dụng Url.Action để tạo đường dẫn đúng với tham số được mã hóa
                                    var baseUrl = '@Url.Action("Add", "Cart", new { id = Model[0].SanPhamID })';
                                    var addToCartUrl = `${baseUrl}?sizeID=${encodeURIComponent(sizeValue)}&colorID=${encodeURIComponent(colorValue)}`;

                                    // Điều hướng đến đường dẫn mới để thêm sản phẩm vào giỏ hàng
                                    $.ajax({
                                        url: addToCartUrl,
                                        type: 'GET',
                                        success: function(response) {
                                            // Sau khi thêm vào giỏ hàng, chuyển hướng đến trang giỏ hàng hoặc thanh toán
                                            window.location.href = '@Url.Action("Index", "Cart")'; // Điều hướng đến trang giỏ hàng
                                        },
                                        error: function() {
                                            alert('Có lỗi xảy ra khi thêm vào giỏ hàng.');
                                        }
                                    });
                                }

                        function filterColors() {
                            var selectedSize = document.getElementById('sizeSelect').value;
                            var colorOptions = document.getElementById('colorSelect').options;

                            // Hiện/ẩn các lựa chọn màu sắc dựa trên Size đã chọn
                            for (var i = 0; i < colorOptions.length; i++) {
                                var option = colorOptions[i];
                                if (selectedSize) {
                                    if (option.getAttribute('data-sizeid') === selectedSize) {
                                        option.style.display = 'block'; // Hiển thị màu sắc phù hợp với size
                                    } else {
                                        option.style.display = 'none'; // Ẩn màu sắc không phù hợp với size
                                    }
                                } else {
                                    option.style.display = 'block'; // Nếu không chọn size, hiển thị tất cả màu sắc
                                }
                            }

                            // Đặt lại giá trị màu sắc đã chọn (nếu có)
                            document.getElementById('colorSelect').value = "";
                            updatePrice(); // Cập nhật giá lại sau khi thay đổi
                        }
</script>